// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Struct.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.Protocol {

  /// <summary>Holder for reflection information generated from Struct.proto</summary>
  public static partial class StructReflection {

    #region Descriptor
    /// <summary>File descriptor for Struct.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StructReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxTdHJ1Y3QucHJvdG8SCFByb3RvY29sGgpFbnVtLnByb3RvIikKCFJvb21J",
            "bmZvEg4KBnJvb21JZBgBIAEoBRINCgVtYXBJZBgCIAEoBSKkAgoIU3RhdElu",
            "Zm8SDQoFbWF4SHAYASABKAISCgoCaHAYAiABKAISDwoHaHBSZWdlbhgDIAEo",
            "AhINCgVtYXhNcBgEIAEoAhIKCgJtcBgFIAEoAhIPCgdtcFJlZ2VuGAYgASgC",
            "Eg4KBmF0dGFjaxgHIAEoAhIPCgdkZWZlbmNlGAggASgCEhIKCm1pc3NDaGFu",
            "Y2UYCSABKAISEwoLYXR0YWNrU3BlZWQYCiABKAISEQoJbW92ZVNwZWVkGAsg",
            "ASgCEg8KB2NyaVJhdGUYDCABKAISEQoJY3JpRGFtYWdlGA0gASgCEgsKA3N0",
            "chgOIAEoBRILCgNkZXgYDyABKAUSCwoDaW50GBAgASgFEgsKA2NvbhgRIAEo",
            "BRILCgN3aXMYEiABKAUidgoMUG9zaXRpb25JbmZvEiUKBXN0YXRlGAEgASgO",
            "MhYuUHJvdG9jb2wuRU9iamVjdFN0YXRlEiMKB21vdmVEaXIYAiABKA4yEi5Q",
            "cm90b2NvbC5FTW92ZURpchIMCgRwb3NYGAMgASgFEgwKBHBvc1kYBCABKAUi",
            "RwoKT2JqZWN0SW5mbxIQCghvYmplY3RJZBgBIAEoBRInCgdwb3NJbmZvGAIg",
            "ASgLMhYuUHJvdG9jb2wuUG9zaXRpb25JbmZvIkwKDlByb2plY3RpbGVJbmZv",
            "EigKCm9iamVjdEluZm8YASABKAsyFC5Qcm90b2NvbC5PYmplY3RJbmZvEhAK",
            "CHRhcmdldElkGAIgASgFInEKDENyZWF0dXJlSW5mbxIoCgpvYmplY3RJbmZv",
            "GAEgASgLMhQuUHJvdG9jb2wuT2JqZWN0SW5mbxIkCghzdGF0SW5mbxgCIAEo",
            "CzISLlByb3RvY29sLlN0YXRJbmZvEhEKCXN0YXRlRmxhZxgDIAEoBSKlAQoI",
            "SGVyb0luZm8SLAoMY3JlYXR1cmVJbmZvGAEgASgLMhYuUHJvdG9jb2wuQ3Jl",
            "YXR1cmVJbmZvEg0KBWxldmVsGAIgASgFEgwKBG5hbWUYAyABKAkSJQoGZ2Vu",
            "ZGVyGAQgASgOMhUuUHJvdG9jb2wuRUhlcm9HZW5kZXISJwoJY2xhc3NUeXBl",
            "GAUgASgOMhQuUHJvdG9jb2wuRUhlcm9DbGFzcyJ5CgpNeUhlcm9JbmZvEiQK",
            "CGhlcm9JbmZvGAEgASgLMhIuUHJvdG9jb2wuSGVyb0luZm8SKQoNdG90YWxT",
            "dGF0SW5mbxgCIAEoCzISLlByb3RvY29sLlN0YXRJbmZvEgsKA2V4cBgDIAEo",
            "BRINCgVtYXBJZBgEIAEoBSI8CgxTa2lsbENvbnRleHQSEAoIdGFyZ2V0SWQY",
            "ASABKAUSDAoEcG9zWBgCIAEoBRIMCgRwb3NZGAMgASgFIjgKDVNraWxsQ29v",
            "bFRpbWUSDwoHc2tpbGxJZBgBIAEoBRIWCg5yZW1haW5pbmdUaWNrcxgCIAEo",
            "BUIbqgIYR29vZ2xlLlByb3RvYnVmLlByb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Protocol.EnumReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.RoomInfo), global::Google.Protobuf.Protocol.RoomInfo.Parser, new[]{ "RoomId", "MapId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.StatInfo), global::Google.Protobuf.Protocol.StatInfo.Parser, new[]{ "MaxHp", "Hp", "HpRegen", "MaxMp", "Mp", "MpRegen", "Attack", "Defence", "MissChance", "AttackSpeed", "MoveSpeed", "CriRate", "CriDamage", "Str", "Dex", "Int", "Con", "Wis" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.PositionInfo), global::Google.Protobuf.Protocol.PositionInfo.Parser, new[]{ "State", "MoveDir", "PosX", "PosY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.ObjectInfo), global::Google.Protobuf.Protocol.ObjectInfo.Parser, new[]{ "ObjectId", "PosInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.ProjectileInfo), global::Google.Protobuf.Protocol.ProjectileInfo.Parser, new[]{ "ObjectInfo", "TargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CreatureInfo), global::Google.Protobuf.Protocol.CreatureInfo.Parser, new[]{ "ObjectInfo", "StatInfo", "StateFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.HeroInfo), global::Google.Protobuf.Protocol.HeroInfo.Parser, new[]{ "CreatureInfo", "Level", "Name", "Gender", "ClassType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.MyHeroInfo), global::Google.Protobuf.Protocol.MyHeroInfo.Parser, new[]{ "HeroInfo", "TotalStatInfo", "Exp", "MapId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SkillContext), global::Google.Protobuf.Protocol.SkillContext.Parser, new[]{ "TargetId", "PosX", "PosY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SkillCoolTime), global::Google.Protobuf.Protocol.SkillCoolTime.Parser, new[]{ "SkillId", "RemainingTicks" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RoomInfo : pb::IMessage<RoomInfo> {
    private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo(RoomInfo other) : this() {
      roomId_ = other.roomId_;
      mapId_ = other.mapId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo Clone() {
      return new RoomInfo(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 2;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (MapId != other.MapId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StatInfo : pb::IMessage<StatInfo> {
    private static readonly pb::MessageParser<StatInfo> _parser = new pb::MessageParser<StatInfo>(() => new StatInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatInfo(StatInfo other) : this() {
      maxHp_ = other.maxHp_;
      hp_ = other.hp_;
      hpRegen_ = other.hpRegen_;
      maxMp_ = other.maxMp_;
      mp_ = other.mp_;
      mpRegen_ = other.mpRegen_;
      attack_ = other.attack_;
      defence_ = other.defence_;
      missChance_ = other.missChance_;
      attackSpeed_ = other.attackSpeed_;
      moveSpeed_ = other.moveSpeed_;
      criRate_ = other.criRate_;
      criDamage_ = other.criDamage_;
      str_ = other.str_;
      dex_ = other.dex_;
      int_ = other.int_;
      con_ = other.con_;
      wis_ = other.wis_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatInfo Clone() {
      return new StatInfo(this);
    }

    /// <summary>Field number for the "maxHp" field.</summary>
    public const int MaxHpFieldNumber = 1;
    private float maxHp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxHp {
      get { return maxHp_; }
      set {
        maxHp_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 2;
    private float hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "hpRegen" field.</summary>
    public const int HpRegenFieldNumber = 3;
    private float hpRegen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HpRegen {
      get { return hpRegen_; }
      set {
        hpRegen_ = value;
      }
    }

    /// <summary>Field number for the "maxMp" field.</summary>
    public const int MaxMpFieldNumber = 4;
    private float maxMp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxMp {
      get { return maxMp_; }
      set {
        maxMp_ = value;
      }
    }

    /// <summary>Field number for the "mp" field.</summary>
    public const int MpFieldNumber = 5;
    private float mp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Mp {
      get { return mp_; }
      set {
        mp_ = value;
      }
    }

    /// <summary>Field number for the "mpRegen" field.</summary>
    public const int MpRegenFieldNumber = 6;
    private float mpRegen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MpRegen {
      get { return mpRegen_; }
      set {
        mpRegen_ = value;
      }
    }

    /// <summary>Field number for the "attack" field.</summary>
    public const int AttackFieldNumber = 7;
    private float attack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Attack {
      get { return attack_; }
      set {
        attack_ = value;
      }
    }

    /// <summary>Field number for the "defence" field.</summary>
    public const int DefenceFieldNumber = 8;
    private float defence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Defence {
      get { return defence_; }
      set {
        defence_ = value;
      }
    }

    /// <summary>Field number for the "missChance" field.</summary>
    public const int MissChanceFieldNumber = 9;
    private float missChance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MissChance {
      get { return missChance_; }
      set {
        missChance_ = value;
      }
    }

    /// <summary>Field number for the "attackSpeed" field.</summary>
    public const int AttackSpeedFieldNumber = 10;
    private float attackSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AttackSpeed {
      get { return attackSpeed_; }
      set {
        attackSpeed_ = value;
      }
    }

    /// <summary>Field number for the "moveSpeed" field.</summary>
    public const int MoveSpeedFieldNumber = 11;
    private float moveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "criRate" field.</summary>
    public const int CriRateFieldNumber = 12;
    private float criRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CriRate {
      get { return criRate_; }
      set {
        criRate_ = value;
      }
    }

    /// <summary>Field number for the "criDamage" field.</summary>
    public const int CriDamageFieldNumber = 13;
    private float criDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CriDamage {
      get { return criDamage_; }
      set {
        criDamage_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 14;
    private int str_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Str {
      get { return str_; }
      set {
        str_ = value;
      }
    }

    /// <summary>Field number for the "dex" field.</summary>
    public const int DexFieldNumber = 15;
    private int dex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dex {
      get { return dex_; }
      set {
        dex_ = value;
      }
    }

    /// <summary>Field number for the "int" field.</summary>
    public const int IntFieldNumber = 16;
    private int int_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Int {
      get { return int_; }
      set {
        int_ = value;
      }
    }

    /// <summary>Field number for the "con" field.</summary>
    public const int ConFieldNumber = 17;
    private int con_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Con {
      get { return con_; }
      set {
        con_ = value;
      }
    }

    /// <summary>Field number for the "wis" field.</summary>
    public const int WisFieldNumber = 18;
    private int wis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Wis {
      get { return wis_; }
      set {
        wis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxHp, other.MaxHp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Hp, other.Hp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HpRegen, other.HpRegen)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxMp, other.MaxMp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Mp, other.Mp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MpRegen, other.MpRegen)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Attack, other.Attack)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Defence, other.Defence)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MissChance, other.MissChance)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AttackSpeed, other.AttackSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MoveSpeed, other.MoveSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CriRate, other.CriRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CriDamage, other.CriDamage)) return false;
      if (Str != other.Str) return false;
      if (Dex != other.Dex) return false;
      if (Int != other.Int) return false;
      if (Con != other.Con) return false;
      if (Wis != other.Wis) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxHp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxHp);
      if (Hp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Hp);
      if (HpRegen != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HpRegen);
      if (MaxMp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxMp);
      if (Mp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Mp);
      if (MpRegen != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MpRegen);
      if (Attack != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Attack);
      if (Defence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Defence);
      if (MissChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MissChance);
      if (AttackSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AttackSpeed);
      if (MoveSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MoveSpeed);
      if (CriRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CriRate);
      if (CriDamage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CriDamage);
      if (Str != 0) hash ^= Str.GetHashCode();
      if (Dex != 0) hash ^= Dex.GetHashCode();
      if (Int != 0) hash ^= Int.GetHashCode();
      if (Con != 0) hash ^= Con.GetHashCode();
      if (Wis != 0) hash ^= Wis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxHp != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(MaxHp);
      }
      if (Hp != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Hp);
      }
      if (HpRegen != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(HpRegen);
      }
      if (MaxMp != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxMp);
      }
      if (Mp != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Mp);
      }
      if (MpRegen != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(MpRegen);
      }
      if (Attack != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Attack);
      }
      if (Defence != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Defence);
      }
      if (MissChance != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(MissChance);
      }
      if (AttackSpeed != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(AttackSpeed);
      }
      if (MoveSpeed != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(MoveSpeed);
      }
      if (CriRate != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(CriRate);
      }
      if (CriDamage != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(CriDamage);
      }
      if (Str != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Str);
      }
      if (Dex != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dex);
      }
      if (Int != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Int);
      }
      if (Con != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Con);
      }
      if (Wis != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Wis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxHp != 0F) {
        size += 1 + 4;
      }
      if (Hp != 0F) {
        size += 1 + 4;
      }
      if (HpRegen != 0F) {
        size += 1 + 4;
      }
      if (MaxMp != 0F) {
        size += 1 + 4;
      }
      if (Mp != 0F) {
        size += 1 + 4;
      }
      if (MpRegen != 0F) {
        size += 1 + 4;
      }
      if (Attack != 0F) {
        size += 1 + 4;
      }
      if (Defence != 0F) {
        size += 1 + 4;
      }
      if (MissChance != 0F) {
        size += 1 + 4;
      }
      if (AttackSpeed != 0F) {
        size += 1 + 4;
      }
      if (MoveSpeed != 0F) {
        size += 1 + 4;
      }
      if (CriRate != 0F) {
        size += 1 + 4;
      }
      if (CriDamage != 0F) {
        size += 1 + 4;
      }
      if (Str != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Str);
      }
      if (Dex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dex);
      }
      if (Int != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Int);
      }
      if (Con != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Con);
      }
      if (Wis != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Wis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatInfo other) {
      if (other == null) {
        return;
      }
      if (other.MaxHp != 0F) {
        MaxHp = other.MaxHp;
      }
      if (other.Hp != 0F) {
        Hp = other.Hp;
      }
      if (other.HpRegen != 0F) {
        HpRegen = other.HpRegen;
      }
      if (other.MaxMp != 0F) {
        MaxMp = other.MaxMp;
      }
      if (other.Mp != 0F) {
        Mp = other.Mp;
      }
      if (other.MpRegen != 0F) {
        MpRegen = other.MpRegen;
      }
      if (other.Attack != 0F) {
        Attack = other.Attack;
      }
      if (other.Defence != 0F) {
        Defence = other.Defence;
      }
      if (other.MissChance != 0F) {
        MissChance = other.MissChance;
      }
      if (other.AttackSpeed != 0F) {
        AttackSpeed = other.AttackSpeed;
      }
      if (other.MoveSpeed != 0F) {
        MoveSpeed = other.MoveSpeed;
      }
      if (other.CriRate != 0F) {
        CriRate = other.CriRate;
      }
      if (other.CriDamage != 0F) {
        CriDamage = other.CriDamage;
      }
      if (other.Str != 0) {
        Str = other.Str;
      }
      if (other.Dex != 0) {
        Dex = other.Dex;
      }
      if (other.Int != 0) {
        Int = other.Int;
      }
      if (other.Con != 0) {
        Con = other.Con;
      }
      if (other.Wis != 0) {
        Wis = other.Wis;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            MaxHp = input.ReadFloat();
            break;
          }
          case 21: {
            Hp = input.ReadFloat();
            break;
          }
          case 29: {
            HpRegen = input.ReadFloat();
            break;
          }
          case 37: {
            MaxMp = input.ReadFloat();
            break;
          }
          case 45: {
            Mp = input.ReadFloat();
            break;
          }
          case 53: {
            MpRegen = input.ReadFloat();
            break;
          }
          case 61: {
            Attack = input.ReadFloat();
            break;
          }
          case 69: {
            Defence = input.ReadFloat();
            break;
          }
          case 77: {
            MissChance = input.ReadFloat();
            break;
          }
          case 85: {
            AttackSpeed = input.ReadFloat();
            break;
          }
          case 93: {
            MoveSpeed = input.ReadFloat();
            break;
          }
          case 101: {
            CriRate = input.ReadFloat();
            break;
          }
          case 109: {
            CriDamage = input.ReadFloat();
            break;
          }
          case 112: {
            Str = input.ReadInt32();
            break;
          }
          case 120: {
            Dex = input.ReadInt32();
            break;
          }
          case 128: {
            Int = input.ReadInt32();
            break;
          }
          case 136: {
            Con = input.ReadInt32();
            break;
          }
          case 144: {
            Wis = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionInfo : pb::IMessage<PositionInfo> {
    private static readonly pb::MessageParser<PositionInfo> _parser = new pb::MessageParser<PositionInfo>(() => new PositionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo(PositionInfo other) : this() {
      state_ = other.state_;
      moveDir_ = other.moveDir_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo Clone() {
      return new PositionInfo(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Protobuf.Protocol.EObjectState state_ = global::Google.Protobuf.Protocol.EObjectState.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.EObjectState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "moveDir" field.</summary>
    public const int MoveDirFieldNumber = 2;
    private global::Google.Protobuf.Protocol.EMoveDir moveDir_ = global::Google.Protobuf.Protocol.EMoveDir.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.EMoveDir MoveDir {
      get { return moveDir_; }
      set {
        moveDir_ = value;
      }
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 3;
    private int posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 4;
    private int posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (MoveDir != other.MoveDir) return false;
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Google.Protobuf.Protocol.EObjectState.None) hash ^= State.GetHashCode();
      if (MoveDir != global::Google.Protobuf.Protocol.EMoveDir.None) hash ^= MoveDir.GetHashCode();
      if (PosX != 0) hash ^= PosX.GetHashCode();
      if (PosY != 0) hash ^= PosY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != global::Google.Protobuf.Protocol.EObjectState.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (MoveDir != global::Google.Protobuf.Protocol.EMoveDir.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MoveDir);
      }
      if (PosX != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PosX);
      }
      if (PosY != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PosY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Google.Protobuf.Protocol.EObjectState.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (MoveDir != global::Google.Protobuf.Protocol.EMoveDir.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MoveDir);
      }
      if (PosX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (PosY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionInfo other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Google.Protobuf.Protocol.EObjectState.None) {
        State = other.State;
      }
      if (other.MoveDir != global::Google.Protobuf.Protocol.EMoveDir.None) {
        MoveDir = other.MoveDir;
      }
      if (other.PosX != 0) {
        PosX = other.PosX;
      }
      if (other.PosY != 0) {
        PosY = other.PosY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Google.Protobuf.Protocol.EObjectState) input.ReadEnum();
            break;
          }
          case 16: {
            MoveDir = (global::Google.Protobuf.Protocol.EMoveDir) input.ReadEnum();
            break;
          }
          case 24: {
            PosX = input.ReadInt32();
            break;
          }
          case 32: {
            PosY = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectInfo : pb::IMessage<ObjectInfo> {
    private static readonly pb::MessageParser<ObjectInfo> _parser = new pb::MessageParser<ObjectInfo>(() => new ObjectInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo(ObjectInfo other) : this() {
      objectId_ = other.objectId_;
      posInfo_ = other.posInfo_ != null ? other.posInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo Clone() {
      return new ObjectInfo(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "posInfo" field.</summary>
    public const int PosInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.PositionInfo posInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo PosInfo {
      get { return posInfo_; }
      set {
        posInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (!object.Equals(PosInfo, other.PosInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (posInfo_ != null) hash ^= PosInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (posInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PosInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (posInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectInfo other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.posInfo_ != null) {
        if (posInfo_ == null) {
          PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        PosInfo.MergeFrom(other.PosInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 18: {
            if (posInfo_ == null) {
              PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(PosInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProjectileInfo : pb::IMessage<ProjectileInfo> {
    private static readonly pb::MessageParser<ProjectileInfo> _parser = new pb::MessageParser<ProjectileInfo>(() => new ProjectileInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProjectileInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectileInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectileInfo(ProjectileInfo other) : this() {
      objectInfo_ = other.objectInfo_ != null ? other.objectInfo_.Clone() : null;
      targetId_ = other.targetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectileInfo Clone() {
      return new ProjectileInfo(this);
    }

    /// <summary>Field number for the "objectInfo" field.</summary>
    public const int ObjectInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ObjectInfo objectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo ObjectInfo {
      get { return objectInfo_; }
      set {
        objectInfo_ = value;
      }
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private int targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProjectileInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProjectileInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ObjectInfo, other.ObjectInfo)) return false;
      if (TargetId != other.TargetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (objectInfo_ != null) hash ^= ObjectInfo.GetHashCode();
      if (TargetId != 0) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (objectInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectInfo);
      }
      if (TargetId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (objectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectInfo);
      }
      if (TargetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProjectileInfo other) {
      if (other == null) {
        return;
      }
      if (other.objectInfo_ != null) {
        if (objectInfo_ == null) {
          ObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        ObjectInfo.MergeFrom(other.ObjectInfo);
      }
      if (other.TargetId != 0) {
        TargetId = other.TargetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (objectInfo_ == null) {
              ObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(ObjectInfo);
            break;
          }
          case 16: {
            TargetId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatureInfo : pb::IMessage<CreatureInfo> {
    private static readonly pb::MessageParser<CreatureInfo> _parser = new pb::MessageParser<CreatureInfo>(() => new CreatureInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatureInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatureInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatureInfo(CreatureInfo other) : this() {
      objectInfo_ = other.objectInfo_ != null ? other.objectInfo_.Clone() : null;
      statInfo_ = other.statInfo_ != null ? other.statInfo_.Clone() : null;
      stateFlag_ = other.stateFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatureInfo Clone() {
      return new CreatureInfo(this);
    }

    /// <summary>Field number for the "objectInfo" field.</summary>
    public const int ObjectInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ObjectInfo objectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo ObjectInfo {
      get { return objectInfo_; }
      set {
        objectInfo_ = value;
      }
    }

    /// <summary>Field number for the "statInfo" field.</summary>
    public const int StatInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.StatInfo statInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.StatInfo StatInfo {
      get { return statInfo_; }
      set {
        statInfo_ = value;
      }
    }

    /// <summary>Field number for the "stateFlag" field.</summary>
    public const int StateFlagFieldNumber = 3;
    private int stateFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateFlag {
      get { return stateFlag_; }
      set {
        stateFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatureInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatureInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ObjectInfo, other.ObjectInfo)) return false;
      if (!object.Equals(StatInfo, other.StatInfo)) return false;
      if (StateFlag != other.StateFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (objectInfo_ != null) hash ^= ObjectInfo.GetHashCode();
      if (statInfo_ != null) hash ^= StatInfo.GetHashCode();
      if (StateFlag != 0) hash ^= StateFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (objectInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectInfo);
      }
      if (statInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StatInfo);
      }
      if (StateFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StateFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (objectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectInfo);
      }
      if (statInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatInfo);
      }
      if (StateFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateFlag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatureInfo other) {
      if (other == null) {
        return;
      }
      if (other.objectInfo_ != null) {
        if (objectInfo_ == null) {
          ObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        ObjectInfo.MergeFrom(other.ObjectInfo);
      }
      if (other.statInfo_ != null) {
        if (statInfo_ == null) {
          StatInfo = new global::Google.Protobuf.Protocol.StatInfo();
        }
        StatInfo.MergeFrom(other.StatInfo);
      }
      if (other.StateFlag != 0) {
        StateFlag = other.StateFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (objectInfo_ == null) {
              ObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(ObjectInfo);
            break;
          }
          case 18: {
            if (statInfo_ == null) {
              StatInfo = new global::Google.Protobuf.Protocol.StatInfo();
            }
            input.ReadMessage(StatInfo);
            break;
          }
          case 24: {
            StateFlag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroInfo : pb::IMessage<HeroInfo> {
    private static readonly pb::MessageParser<HeroInfo> _parser = new pb::MessageParser<HeroInfo>(() => new HeroInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroInfo(HeroInfo other) : this() {
      creatureInfo_ = other.creatureInfo_ != null ? other.creatureInfo_.Clone() : null;
      level_ = other.level_;
      name_ = other.name_;
      gender_ = other.gender_;
      classType_ = other.classType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroInfo Clone() {
      return new HeroInfo(this);
    }

    /// <summary>Field number for the "creatureInfo" field.</summary>
    public const int CreatureInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.CreatureInfo creatureInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.CreatureInfo CreatureInfo {
      get { return creatureInfo_; }
      set {
        creatureInfo_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 4;
    private global::Google.Protobuf.Protocol.EHeroGender gender_ = global::Google.Protobuf.Protocol.EHeroGender.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.EHeroGender Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "classType" field.</summary>
    public const int ClassTypeFieldNumber = 5;
    private global::Google.Protobuf.Protocol.EHeroClass classType_ = global::Google.Protobuf.Protocol.EHeroClass.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.EHeroClass ClassType {
      get { return classType_; }
      set {
        classType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreatureInfo, other.CreatureInfo)) return false;
      if (Level != other.Level) return false;
      if (Name != other.Name) return false;
      if (Gender != other.Gender) return false;
      if (ClassType != other.ClassType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (creatureInfo_ != null) hash ^= CreatureInfo.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gender != global::Google.Protobuf.Protocol.EHeroGender.None) hash ^= Gender.GetHashCode();
      if (ClassType != global::Google.Protobuf.Protocol.EHeroClass.None) hash ^= ClassType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (creatureInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreatureInfo);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Gender != global::Google.Protobuf.Protocol.EHeroGender.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Gender);
      }
      if (ClassType != global::Google.Protobuf.Protocol.EHeroClass.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ClassType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (creatureInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatureInfo);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gender != global::Google.Protobuf.Protocol.EHeroGender.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gender);
      }
      if (ClassType != global::Google.Protobuf.Protocol.EHeroClass.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClassType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroInfo other) {
      if (other == null) {
        return;
      }
      if (other.creatureInfo_ != null) {
        if (creatureInfo_ == null) {
          CreatureInfo = new global::Google.Protobuf.Protocol.CreatureInfo();
        }
        CreatureInfo.MergeFrom(other.CreatureInfo);
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gender != global::Google.Protobuf.Protocol.EHeroGender.None) {
        Gender = other.Gender;
      }
      if (other.ClassType != global::Google.Protobuf.Protocol.EHeroClass.None) {
        ClassType = other.ClassType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (creatureInfo_ == null) {
              CreatureInfo = new global::Google.Protobuf.Protocol.CreatureInfo();
            }
            input.ReadMessage(CreatureInfo);
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Gender = (global::Google.Protobuf.Protocol.EHeroGender) input.ReadEnum();
            break;
          }
          case 40: {
            ClassType = (global::Google.Protobuf.Protocol.EHeroClass) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MyHeroInfo : pb::IMessage<MyHeroInfo> {
    private static readonly pb::MessageParser<MyHeroInfo> _parser = new pb::MessageParser<MyHeroInfo>(() => new MyHeroInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MyHeroInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyHeroInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyHeroInfo(MyHeroInfo other) : this() {
      heroInfo_ = other.heroInfo_ != null ? other.heroInfo_.Clone() : null;
      totalStatInfo_ = other.totalStatInfo_ != null ? other.totalStatInfo_.Clone() : null;
      exp_ = other.exp_;
      mapId_ = other.mapId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyHeroInfo Clone() {
      return new MyHeroInfo(this);
    }

    /// <summary>Field number for the "heroInfo" field.</summary>
    public const int HeroInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.HeroInfo heroInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.HeroInfo HeroInfo {
      get { return heroInfo_; }
      set {
        heroInfo_ = value;
      }
    }

    /// <summary>Field number for the "totalStatInfo" field.</summary>
    public const int TotalStatInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.StatInfo totalStatInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.StatInfo TotalStatInfo {
      get { return totalStatInfo_; }
      set {
        totalStatInfo_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 3;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 4;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MyHeroInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MyHeroInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HeroInfo, other.HeroInfo)) return false;
      if (!object.Equals(TotalStatInfo, other.TotalStatInfo)) return false;
      if (Exp != other.Exp) return false;
      if (MapId != other.MapId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (heroInfo_ != null) hash ^= HeroInfo.GetHashCode();
      if (totalStatInfo_ != null) hash ^= TotalStatInfo.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (heroInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HeroInfo);
      }
      if (totalStatInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TotalStatInfo);
      }
      if (Exp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Exp);
      }
      if (MapId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MapId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (heroInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeroInfo);
      }
      if (totalStatInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalStatInfo);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MyHeroInfo other) {
      if (other == null) {
        return;
      }
      if (other.heroInfo_ != null) {
        if (heroInfo_ == null) {
          HeroInfo = new global::Google.Protobuf.Protocol.HeroInfo();
        }
        HeroInfo.MergeFrom(other.HeroInfo);
      }
      if (other.totalStatInfo_ != null) {
        if (totalStatInfo_ == null) {
          TotalStatInfo = new global::Google.Protobuf.Protocol.StatInfo();
        }
        TotalStatInfo.MergeFrom(other.TotalStatInfo);
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (heroInfo_ == null) {
              HeroInfo = new global::Google.Protobuf.Protocol.HeroInfo();
            }
            input.ReadMessage(HeroInfo);
            break;
          }
          case 18: {
            if (totalStatInfo_ == null) {
              TotalStatInfo = new global::Google.Protobuf.Protocol.StatInfo();
            }
            input.ReadMessage(TotalStatInfo);
            break;
          }
          case 24: {
            Exp = input.ReadInt32();
            break;
          }
          case 32: {
            MapId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillContext : pb::IMessage<SkillContext> {
    private static readonly pb::MessageParser<SkillContext> _parser = new pb::MessageParser<SkillContext>(() => new SkillContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillContext(SkillContext other) : this() {
      targetId_ = other.targetId_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillContext Clone() {
      return new SkillContext(this);
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 1;
    private int targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 2;
    private int posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 3;
    private int posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetId != other.TargetId) return false;
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetId != 0) hash ^= TargetId.GetHashCode();
      if (PosX != 0) hash ^= PosX.GetHashCode();
      if (PosY != 0) hash ^= PosY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TargetId);
      }
      if (PosX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PosX);
      }
      if (PosY != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PosY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (PosX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (PosY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillContext other) {
      if (other == null) {
        return;
      }
      if (other.TargetId != 0) {
        TargetId = other.TargetId;
      }
      if (other.PosX != 0) {
        PosX = other.PosX;
      }
      if (other.PosY != 0) {
        PosY = other.PosY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetId = input.ReadInt32();
            break;
          }
          case 16: {
            PosX = input.ReadInt32();
            break;
          }
          case 24: {
            PosY = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillCoolTime : pb::IMessage<SkillCoolTime> {
    private static readonly pb::MessageParser<SkillCoolTime> _parser = new pb::MessageParser<SkillCoolTime>(() => new SkillCoolTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillCoolTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.StructReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillCoolTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillCoolTime(SkillCoolTime other) : this() {
      skillId_ = other.skillId_;
      remainingTicks_ = other.remainingTicks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillCoolTime Clone() {
      return new SkillCoolTime(this);
    }

    /// <summary>Field number for the "skillId" field.</summary>
    public const int SkillIdFieldNumber = 1;
    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "remainingTicks" field.</summary>
    public const int RemainingTicksFieldNumber = 2;
    private int remainingTicks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainingTicks {
      get { return remainingTicks_; }
      set {
        remainingTicks_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillCoolTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillCoolTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillId != other.SkillId) return false;
      if (RemainingTicks != other.RemainingTicks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (RemainingTicks != 0) hash ^= RemainingTicks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillId);
      }
      if (RemainingTicks != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RemainingTicks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (RemainingTicks != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainingTicks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillCoolTime other) {
      if (other == null) {
        return;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.RemainingTicks != 0) {
        RemainingTicks = other.RemainingTicks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillId = input.ReadInt32();
            break;
          }
          case 16: {
            RemainingTicks = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
