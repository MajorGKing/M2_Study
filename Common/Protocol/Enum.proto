syntax = "proto3";

package Protocol;
option csharp_namespace = "Google.Protobuf.Protocol";

enum EHeroGender
{
	EHERO_GENDER_NONE = 0;
	EHERO_GENDER_MALE = 1;
	EHERO_GENDER_FEMALE = 2;
}

enum EHeroClass
{
	EHERO_CLASS_NONE = 0;
	EHERO_CLASS_KNIGHT = 1;
	EHERO_CLASS_ARCHER = 2;
	EHERO_CLASS_WIZARD = 3;
	EHERO_CLASS_ROGUE = 4;
}

enum ECreateHeroResult
{
	ECREATE_HERO_RESULT_NONE = 0;
	ECREATE_HERO_RESULT_SUCCESS = 1;
	ECREATE_HERO_RESULT_FAIL_DUPLICATE_NAME = 2;
}

enum EObjectState 
{
	EOBJECT_STATE_NONE = 0;
	EOBJECT_STATE_IDLE = 1;
	EOBJECT_STATE_MOVE = 2;
	EOBJECT_STATE_SKILL = 3;
	EOBJECT_STATE_DEAD = 4;
}

enum EMoveDir
{
	EMOVE_DIR_NONE = 0;
	EMOVE_DIR_UP = 1;
	EMOVE_DIR_DOWN = 2;
	EMOVE_DIR_LEFT = 3;
	EMOVE_DIR_RIGHT = 4;
	EMOVE_DIR_UP_LEFT = 5;
	EMOVE_DIR_UP_RIGHT = 6;
	EMOVE_DIR_DOWN_LEFT = 7;
	EMOVE_DIR_DOWN_RIGHT = 8;
}

enum EGameObjectType 
{
	EGAME_OBJECT_TYPE_NONE = 0;
	EGAME_OBJECT_TYPE_HERO = 1;
	EGAME_OBJECT_TYPE_MONSTER = 2;
	EGAME_OBJECT_TYPE_PROJECTILE = 3;
	EGAME_OBJECT_TYPE_ITEM_HOLDER = 4;
}

enum ECellCollisionType
{
	ECELL_COLLISION_TYPE_NONE = 0;
	ECELL_COLLISION_TYPE_WALL = 1;
}

enum EFindPathResult
{
    EFIND_PATH_RESULT_NONE = 0;
    EFIND_PATH_RESULT_FAIL_LERPCELL = 1;
    EFIND_PATH_RESULT_FAIL_NO_PATH = 2;
    EFIND_PATH_RESULT_FAIL_MOVE_TO = 3;
    EFIND_PATH_RESULT_FAIL_SAME_POSITION = 4;
    EFIND_PATH_RESULT_SUCCESS = 5;
}

enum ERespawnType 
{
	RESPAWN_TYPE_NONE = 0;
	RESPAWN_TYPE_RANDOM_INTERVAL = 1;
	RESPAWN_TYPE_MAINTAIN_COUNT = 2;
}

enum EOwnerStat
{
	SkillCaster =0;
	EffectOwner = 1;
}

enum EStatType
{
    ESTAT_TYPE_MAX_HP = 0;
    ESTAT_TYPE_HP = 1;
    ESTAT_TYPE_HP_REGEN = 2;
    ESTAT_TYPE_MAX_MP = 3;
    ESTAT_TYPE_MP = 4;
    ESTAT_TYPE_MP_REGEN = 5;
    ESTAT_TYPE_ATTACK = 6;
    ESTAT_TYPE_DEFENCE = 7;
    ESTAT_TYPE_DODGE = 8;
    ESTAT_TYPE_ATTACK_SPEED = 9;
    ESTAT_TYPE_MOVE_SPEED = 10;
    ESTAT_TYPE_CRI_RATE = 11;
    ESTAT_TYPE_CRI_DAMAGE = 12;
    ESTAT_TYPE_STR = 13;
    ESTAT_TYPE_DEX = 14;
    ESTAT_TYPE_INT = 15;
    ESTAT_TYPE_CON = 16;
    ESTAT_TYPE_WIS = 17;
}

enum ECreatureStateFlag
{
	ECREATURE_STATE_FLAG_NONE = 0;
	ECREATURE_STATE_FLAG_SLOW = 1;
	ECREATURE_STATE_FLAG_STUN = 2;
	ECREATURE_STATE_FLAG_FASTER = 3;
	ECREATURE_STATE_FLAG_POISON = 4;
	ECREATURE_STATE_FLAG_MAX_COUNT = 5;
}

enum ESkillType
{
	ESKILL_TYPE_NONE = 0;
    // 패시브? 액티브? 움직이면서 쓰기 가능? 등 분류가 좋아보임.
}

enum EUseSkillTargetType
{
    EUSE_SKILL_TARGET_TYPE_NONE = 0;
    EUSE_SKILL_TARGET_TYPE_SELF = 1;
    EUSE_SKILL_TARGET_TYPE_OTHER = 2;
    EUSE_SKILL_TARGET_TYPE_ANY = 3;
}

enum ETargetFriendType
{
   ETARGET_FRIEND_TYPE_NONE = 0;
   ETARGET_FRIEND_TYPE_FRIEND = 1;
   ETARGET_FRIEND_TYPE_ENEMY = 2;
   ETARGET_FRIEND_TYPE_ANY = 3;
}

enum EEffectType
{
   EEFFECT_TYPE_NONE = 0;
   EEFFECT_TYPE_DAMAGE = 1;
   EEFFECT_TYPE_HEAL = 2;
   EEFFECT_TYPE_BUFF_STAT = 3;
   EEFFECT_TYPE_BUFF_LIFE_STEAL = 4;  
   EEFFECT_TYPE_BUFF_STUN = 5;
}

enum EDurationPolicy 
{
    EDURATION_POLICY_INSTANT = 0;
    EDURATION_POLICY_DURATION = 1;
    EDURATION_POLICY_INFINITE = 2;
}

enum EDamageType 
{
	EDAMAGE_TYPE_NONE = 0;
    EDAMAGE_TYPE_HIT = 1;
    EDAMAGE_TYPE_CRITICAL = 2;
    EDAMAGE_TYPE_MISS = 3;
    EDAMAGE_TYPE_HEAL = 4;
    EDAMAGE_TYPE_STUN = 5;
}

enum EItemGrade 
{
    EITEM_GRADE_NONE = 0;
    EITEM_GRADE_NORMAL = 1;
    EITEM_GRADE_RARE = 2;
    EITEM_GRADE_EPIC = 3;
    EITEM_GRADE_LEGENDARY = 4;
}

enum ECanUseSkillFailReason
{
    ECAN_USE_SKILL_FAIL_REASON_NONE = 0;
    ECAN_USE_SKILL_FAIL_REASON_COOLTIME = 1;
    ECAN_USE_SKILL_FAIL_REASON_INVALID_OWNER_STATE = 2;
    ECAN_USE_SKILL_FAIL_REASON_INVALID_TARGET = 3;
    ECAN_USE_SKILL_FAIL_REASON_INVALID_DATA = 4;
    ECAN_USE_SKILL_FAIL_REASON_SKILL_COST = 5;
    ECAN_USE_SKILL_FAIL_REASON_SKILL_RANGE = 6;    
}